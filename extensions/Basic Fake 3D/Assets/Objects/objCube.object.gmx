<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SET UP VARIABLES

// MAXIMUM HEIGHT OF THE CUBOID
max_depth = 64;

// OBJECT TO "FOLLOW"
obj_to_follow = objPerspective;

// A FACTOR TO "SLOW DOWN" THE EFFECT, CHANGE THIS TO MAKE THE EFFECT
// MORE DRASTIC

factor = 16;

// INITIALISE OTHER VARIABLES
hdepth = 0;
vdepth = 0;
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CALCULATE DEPTH AND STUFF

// SET DEPTH BASED ON THE POSITION OF THE FOLLOWED OBJECT

hdepth = (obj_to_follow.x-x)/factor;
vdepth = (obj_to_follow.y-y)/factor;

// CHECK DEPTH OF CUBE AND ALTER VARIABLES USED WHEN DRAWING

if (hdepth &gt; max_depth/2) {

    hdepth=max_depth/2;

}

if (hdepth &lt; -max_depth/2) {

    hdepth=-max_depth/2;

}

if (vdepth &gt; max_depth/2) {

    vdepth=max_depth/2;

}

if (vdepth &lt; -max_depth/2) {

    vdepth=-max_depth/2;

}

// SET DRAW DEPTH TO MAKE OBJECTS CLOSER TO THE BOTTOM OF THE SCREEN DRAW LAST

depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW THE TOP OF THE CUBE IN DRAW END SO IT WON'T BE COVERED

// TOP
draw_sprite_pos(sprTop,0,x-hdepth,y-vdepth,x+32-hdepth,y-vdepth,x+32-hdepth,y+32-vdepth,x-hdepth,y+32-vdepth,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW THE BOTTOM AND THE SIDES IN THE DRAW EVENT
//  SO THAT THEY WILL NOT COVER THE TOP OF OTHER CUBES

draw_self();

// LEFT
draw_sprite_pos(sprSides,0,x,y,x-hdepth,y-vdepth,x-hdepth,y+32-vdepth,x,y+32,1);

// RIGHT
draw_sprite_pos(sprSides,0,x+32,y,x+32-hdepth,y-vdepth,x+32-hdepth,y+32-vdepth,x+32,y+32,1);

// TOP
draw_sprite_pos(sprSides,0,x-hdepth,y-vdepth,x+32-hdepth,y-vdepth,x+32,y,x,y,1);

// BOTTOM
draw_sprite_pos(sprSides,0,x-hdepth,y+32-vdepth,x+32-hdepth,y+32-vdepth,x+32,y+32,x,y+32,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
